//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace eCardDialog.ABSRef {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="abs_11Binding", Namespace="http://soap.abs.client.chipkarte.at")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(baseProperty))]
    public partial class AbsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback abfragenLangzeitbewilligungOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ermittelnPatientenDatenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRueckantwortOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSVTsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusBewilligungsAnfragenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusPatientBewilligungsAnfragenOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendenAnfrageOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendenFolgeverordnungOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AbsService() {
            this.Url = global::eCardDialog.Properties.Settings.Default.eCardDialog_ABSRef_AbsService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event abfragenLangzeitbewilligungCompletedEventHandler abfragenLangzeitbewilligungCompleted;
        
        /// <remarks/>
        public event checkStatusCompletedEventHandler checkStatusCompleted;
        
        /// <remarks/>
        public event ermittelnPatientenDatenCompletedEventHandler ermittelnPatientenDatenCompleted;
        
        /// <remarks/>
        public event getRueckantwortCompletedEventHandler getRueckantwortCompleted;
        
        /// <remarks/>
        public event getSVTsCompletedEventHandler getSVTsCompleted;
        
        /// <remarks/>
        public event getStatusBewilligungsAnfragenCompletedEventHandler getStatusBewilligungsAnfragenCompleted;
        
        /// <remarks/>
        public event getStatusPatientBewilligungsAnfragenCompletedEventHandler getStatusPatientBewilligungsAnfragenCompleted;
        
        /// <remarks/>
        public event sendenAnfrageCompletedEventHandler sendenAnfrageCompleted;
        
        /// <remarks/>
        public event sendenFolgeverordnungCompletedEventHandler sendenFolgeverordnungCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.abs.client.chipkarte.at", ResponseNamespace="http://soap.abs.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public langzeitbewilligungsAbfrageErgebnis[] abfragenLangzeitbewilligung(string dialogId, string sVNRPatient, string cardReaderId) {
            object[] results = this.Invoke("abfragenLangzeitbewilligung", new object[] {
                        dialogId,
                        sVNRPatient,
                        cardReaderId});
            return ((langzeitbewilligungsAbfrageErgebnis[])(results[0]));
        }
        
        /// <remarks/>
        public void abfragenLangzeitbewilligungAsync(string dialogId, string sVNRPatient, string cardReaderId) {
            this.abfragenLangzeitbewilligungAsync(dialogId, sVNRPatient, cardReaderId, null);
        }
        
        /// <remarks/>
        public void abfragenLangzeitbewilligungAsync(string dialogId, string sVNRPatient, string cardReaderId, object userState) {
            if ((this.abfragenLangzeitbewilligungOperationCompleted == null)) {
                this.abfragenLangzeitbewilligungOperationCompleted = new System.Threading.SendOrPostCallback(this.OnabfragenLangzeitbewilligungOperationCompleted);
            }
            this.InvokeAsync("abfragenLangzeitbewilligung", new object[] {
                        dialogId,
                        sVNRPatient,
                        cardReaderId}, this.abfragenLangzeitbewilligungOperationCompleted, userState);
        }
        
        private void OnabfragenLangzeitbewilligungOperationCompleted(object arg) {
            if ((this.abfragenLangzeitbewilligungCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.abfragenLangzeitbewilligungCompleted(this, new abfragenLangzeitbewilligungCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.abs.client.chipkarte.at", ResponseNamespace="http://soap.abs.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public property[] checkStatus(string dialogId) {
            object[] results = this.Invoke("checkStatus", new object[] {
                        dialogId});
            return ((property[])(results[0]));
        }
        
        /// <remarks/>
        public void checkStatusAsync(string dialogId) {
            this.checkStatusAsync(dialogId, null);
        }
        
        /// <remarks/>
        public void checkStatusAsync(string dialogId, object userState) {
            if ((this.checkStatusOperationCompleted == null)) {
                this.checkStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckStatusOperationCompleted);
            }
            this.InvokeAsync("checkStatus", new object[] {
                        dialogId}, this.checkStatusOperationCompleted, userState);
        }
        
        private void OncheckStatusOperationCompleted(object arg) {
            if ((this.checkStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkStatusCompleted(this, new checkStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.abs.client.chipkarte.at", ResponseNamespace="http://soap.abs.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bewilligungsAnfrage ermittelnPatientenDaten(string dialogId, string svNummer, string svtCode, string ekvkNummer, string geschlecht, string nachname, string vorname, string antragstyp, string cardReaderId) {
            object[] results = this.Invoke("ermittelnPatientenDaten", new object[] {
                        dialogId,
                        svNummer,
                        svtCode,
                        ekvkNummer,
                        geschlecht,
                        nachname,
                        vorname,
                        antragstyp,
                        cardReaderId});
            return ((bewilligungsAnfrage)(results[0]));
        }
        
        /// <remarks/>
        public void ermittelnPatientenDatenAsync(string dialogId, string svNummer, string svtCode, string ekvkNummer, string geschlecht, string nachname, string vorname, string antragstyp, string cardReaderId) {
            this.ermittelnPatientenDatenAsync(dialogId, svNummer, svtCode, ekvkNummer, geschlecht, nachname, vorname, antragstyp, cardReaderId, null);
        }
        
        /// <remarks/>
        public void ermittelnPatientenDatenAsync(string dialogId, string svNummer, string svtCode, string ekvkNummer, string geschlecht, string nachname, string vorname, string antragstyp, string cardReaderId, object userState) {
            if ((this.ermittelnPatientenDatenOperationCompleted == null)) {
                this.ermittelnPatientenDatenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnermittelnPatientenDatenOperationCompleted);
            }
            this.InvokeAsync("ermittelnPatientenDaten", new object[] {
                        dialogId,
                        svNummer,
                        svtCode,
                        ekvkNummer,
                        geschlecht,
                        nachname,
                        vorname,
                        antragstyp,
                        cardReaderId}, this.ermittelnPatientenDatenOperationCompleted, userState);
        }
        
        private void OnermittelnPatientenDatenOperationCompleted(object arg) {
            if ((this.ermittelnPatientenDatenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ermittelnPatientenDatenCompleted(this, new ermittelnPatientenDatenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.abs.client.chipkarte.at", ResponseNamespace="http://soap.abs.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public rueckantwort getRueckantwort(string dialogId, string anfrageId) {
            object[] results = this.Invoke("getRueckantwort", new object[] {
                        dialogId,
                        anfrageId});
            return ((rueckantwort)(results[0]));
        }
        
        /// <remarks/>
        public void getRueckantwortAsync(string dialogId, string anfrageId) {
            this.getRueckantwortAsync(dialogId, anfrageId, null);
        }
        
        /// <remarks/>
        public void getRueckantwortAsync(string dialogId, string anfrageId, object userState) {
            if ((this.getRueckantwortOperationCompleted == null)) {
                this.getRueckantwortOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRueckantwortOperationCompleted);
            }
            this.InvokeAsync("getRueckantwort", new object[] {
                        dialogId,
                        anfrageId}, this.getRueckantwortOperationCompleted, userState);
        }
        
        private void OngetRueckantwortOperationCompleted(object arg) {
            if ((this.getRueckantwortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRueckantwortCompleted(this, new getRueckantwortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.abs.client.chipkarte.at", ResponseNamespace="http://soap.abs.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public svtProperty[] getSVTs() {
            object[] results = this.Invoke("getSVTs", new object[0]);
            return ((svtProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void getSVTsAsync() {
            this.getSVTsAsync(null);
        }
        
        /// <remarks/>
        public void getSVTsAsync(object userState) {
            if ((this.getSVTsOperationCompleted == null)) {
                this.getSVTsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSVTsOperationCompleted);
            }
            this.InvokeAsync("getSVTs", new object[0], this.getSVTsOperationCompleted, userState);
        }
        
        private void OngetSVTsOperationCompleted(object arg) {
            if ((this.getSVTsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSVTsCompleted(this, new getSVTsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.abs.client.chipkarte.at", ResponseNamespace="http://soap.abs.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public statusBewilligungsAnfrage[] getStatusBewilligungsAnfragen(string dialogId, filterKriterien filterkriterien) {
            object[] results = this.Invoke("getStatusBewilligungsAnfragen", new object[] {
                        dialogId,
                        filterkriterien});
            return ((statusBewilligungsAnfrage[])(results[0]));
        }
        
        /// <remarks/>
        public void getStatusBewilligungsAnfragenAsync(string dialogId, filterKriterien filterkriterien) {
            this.getStatusBewilligungsAnfragenAsync(dialogId, filterkriterien, null);
        }
        
        /// <remarks/>
        public void getStatusBewilligungsAnfragenAsync(string dialogId, filterKriterien filterkriterien, object userState) {
            if ((this.getStatusBewilligungsAnfragenOperationCompleted == null)) {
                this.getStatusBewilligungsAnfragenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusBewilligungsAnfragenOperationCompleted);
            }
            this.InvokeAsync("getStatusBewilligungsAnfragen", new object[] {
                        dialogId,
                        filterkriterien}, this.getStatusBewilligungsAnfragenOperationCompleted, userState);
        }
        
        private void OngetStatusBewilligungsAnfragenOperationCompleted(object arg) {
            if ((this.getStatusBewilligungsAnfragenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusBewilligungsAnfragenCompleted(this, new getStatusBewilligungsAnfragenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.abs.client.chipkarte.at", ResponseNamespace="http://soap.abs.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public statusBewilligungsAnfrage[] getStatusPatientBewilligungsAnfragen(string dialogId, string svNummer, string nachname, string vorname, string cardReaderId) {
            object[] results = this.Invoke("getStatusPatientBewilligungsAnfragen", new object[] {
                        dialogId,
                        svNummer,
                        nachname,
                        vorname,
                        cardReaderId});
            return ((statusBewilligungsAnfrage[])(results[0]));
        }
        
        /// <remarks/>
        public void getStatusPatientBewilligungsAnfragenAsync(string dialogId, string svNummer, string nachname, string vorname, string cardReaderId) {
            this.getStatusPatientBewilligungsAnfragenAsync(dialogId, svNummer, nachname, vorname, cardReaderId, null);
        }
        
        /// <remarks/>
        public void getStatusPatientBewilligungsAnfragenAsync(string dialogId, string svNummer, string nachname, string vorname, string cardReaderId, object userState) {
            if ((this.getStatusPatientBewilligungsAnfragenOperationCompleted == null)) {
                this.getStatusPatientBewilligungsAnfragenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusPatientBewilligungsAnfragenOperationCompleted);
            }
            this.InvokeAsync("getStatusPatientBewilligungsAnfragen", new object[] {
                        dialogId,
                        svNummer,
                        nachname,
                        vorname,
                        cardReaderId}, this.getStatusPatientBewilligungsAnfragenOperationCompleted, userState);
        }
        
        private void OngetStatusPatientBewilligungsAnfragenOperationCompleted(object arg) {
            if ((this.getStatusPatientBewilligungsAnfragenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusPatientBewilligungsAnfragenCompleted(this, new getStatusPatientBewilligungsAnfragenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.abs.client.chipkarte.at", ResponseNamespace="http://soap.abs.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public anfrageAntwort sendenAnfrage(string dialogId, bewilligungsAnfrage anfrage, string cardReaderId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] attachment) {
            object[] results = this.Invoke("sendenAnfrage", new object[] {
                        dialogId,
                        anfrage,
                        cardReaderId,
                        attachment});
            return ((anfrageAntwort)(results[0]));
        }
        
        /// <remarks/>
        public void sendenAnfrageAsync(string dialogId, bewilligungsAnfrage anfrage, string cardReaderId, byte[] attachment) {
            this.sendenAnfrageAsync(dialogId, anfrage, cardReaderId, attachment, null);
        }
        
        /// <remarks/>
        public void sendenAnfrageAsync(string dialogId, bewilligungsAnfrage anfrage, string cardReaderId, byte[] attachment, object userState) {
            if ((this.sendenAnfrageOperationCompleted == null)) {
                this.sendenAnfrageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendenAnfrageOperationCompleted);
            }
            this.InvokeAsync("sendenAnfrage", new object[] {
                        dialogId,
                        anfrage,
                        cardReaderId,
                        attachment}, this.sendenAnfrageOperationCompleted, userState);
        }
        
        private void OnsendenAnfrageOperationCompleted(object arg) {
            if ((this.sendenAnfrageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendenAnfrageCompleted(this, new sendenAnfrageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.abs.client.chipkarte.at", ResponseNamespace="http://soap.abs.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public folgeverordnungsAusstellungsErgebnis sendenFolgeverordnung(string dialogId, folgeverordnungsAusstellungsParameter ausstellungsParameter, string cardReaderId) {
            object[] results = this.Invoke("sendenFolgeverordnung", new object[] {
                        dialogId,
                        ausstellungsParameter,
                        cardReaderId});
            return ((folgeverordnungsAusstellungsErgebnis)(results[0]));
        }
        
        /// <remarks/>
        public void sendenFolgeverordnungAsync(string dialogId, folgeverordnungsAusstellungsParameter ausstellungsParameter, string cardReaderId) {
            this.sendenFolgeverordnungAsync(dialogId, ausstellungsParameter, cardReaderId, null);
        }
        
        /// <remarks/>
        public void sendenFolgeverordnungAsync(string dialogId, folgeverordnungsAusstellungsParameter ausstellungsParameter, string cardReaderId, object userState) {
            if ((this.sendenFolgeverordnungOperationCompleted == null)) {
                this.sendenFolgeverordnungOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendenFolgeverordnungOperationCompleted);
            }
            this.InvokeAsync("sendenFolgeverordnung", new object[] {
                        dialogId,
                        ausstellungsParameter,
                        cardReaderId}, this.sendenFolgeverordnungOperationCompleted, userState);
        }
        
        private void OnsendenFolgeverordnungOperationCompleted(object arg) {
            if ((this.sendenFolgeverordnungCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendenFolgeverordnungCompleted(this, new sendenFolgeverordnungCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class langzeitbewilligungsAbfrageErgebnis {
        
        private bool abgabeMoeglichField;
        
        private bool abgabeMoeglichFieldSpecified;
        
        private int bewilligteAbgabemengeField;
        
        private bool bewilligteAbgabemengeFieldSpecified;
        
        private string datumGueltigBisField;
        
        private string datumNaechstMoeglicheFolgeverordnungField;
        
        private string dosierungField;
        
        private string druckNachnamePatientField;
        
        private string druckVornamePatientField;
        
        private bool heuteBereitsVerordnetField;
        
        private bool heuteBereitsVerordnetFieldSpecified;
        
        private int heuteBereitsVerordneteMengeField;
        
        private bool heuteBereitsVerordneteMengeFieldSpecified;
        
        private int maximaleAbgabemengeField;
        
        private bool maximaleAbgabemengeFieldSpecified;
        
        private string medikamentNameField;
        
        private int monatsBedarfField;
        
        private bool monatsBedarfFieldSpecified;
        
        private string nachnamePatientField;
        
        private int offeneAbgabemengeField;
        
        private bool offeneAbgabemengeFieldSpecified;
        
        private string pharmanummerField;
        
        private string sVNRPatientField;
        
        private string vornamePatientField;
        
        /// <remarks/>
        public bool abgabeMoeglich {
            get {
                return this.abgabeMoeglichField;
            }
            set {
                this.abgabeMoeglichField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool abgabeMoeglichSpecified {
            get {
                return this.abgabeMoeglichFieldSpecified;
            }
            set {
                this.abgabeMoeglichFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int bewilligteAbgabemenge {
            get {
                return this.bewilligteAbgabemengeField;
            }
            set {
                this.bewilligteAbgabemengeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bewilligteAbgabemengeSpecified {
            get {
                return this.bewilligteAbgabemengeFieldSpecified;
            }
            set {
                this.bewilligteAbgabemengeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string datumGueltigBis {
            get {
                return this.datumGueltigBisField;
            }
            set {
                this.datumGueltigBisField = value;
            }
        }
        
        /// <remarks/>
        public string datumNaechstMoeglicheFolgeverordnung {
            get {
                return this.datumNaechstMoeglicheFolgeverordnungField;
            }
            set {
                this.datumNaechstMoeglicheFolgeverordnungField = value;
            }
        }
        
        /// <remarks/>
        public string dosierung {
            get {
                return this.dosierungField;
            }
            set {
                this.dosierungField = value;
            }
        }
        
        /// <remarks/>
        public string druckNachnamePatient {
            get {
                return this.druckNachnamePatientField;
            }
            set {
                this.druckNachnamePatientField = value;
            }
        }
        
        /// <remarks/>
        public string druckVornamePatient {
            get {
                return this.druckVornamePatientField;
            }
            set {
                this.druckVornamePatientField = value;
            }
        }
        
        /// <remarks/>
        public bool heuteBereitsVerordnet {
            get {
                return this.heuteBereitsVerordnetField;
            }
            set {
                this.heuteBereitsVerordnetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool heuteBereitsVerordnetSpecified {
            get {
                return this.heuteBereitsVerordnetFieldSpecified;
            }
            set {
                this.heuteBereitsVerordnetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int heuteBereitsVerordneteMenge {
            get {
                return this.heuteBereitsVerordneteMengeField;
            }
            set {
                this.heuteBereitsVerordneteMengeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool heuteBereitsVerordneteMengeSpecified {
            get {
                return this.heuteBereitsVerordneteMengeFieldSpecified;
            }
            set {
                this.heuteBereitsVerordneteMengeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int maximaleAbgabemenge {
            get {
                return this.maximaleAbgabemengeField;
            }
            set {
                this.maximaleAbgabemengeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maximaleAbgabemengeSpecified {
            get {
                return this.maximaleAbgabemengeFieldSpecified;
            }
            set {
                this.maximaleAbgabemengeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string medikamentName {
            get {
                return this.medikamentNameField;
            }
            set {
                this.medikamentNameField = value;
            }
        }
        
        /// <remarks/>
        public int monatsBedarf {
            get {
                return this.monatsBedarfField;
            }
            set {
                this.monatsBedarfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monatsBedarfSpecified {
            get {
                return this.monatsBedarfFieldSpecified;
            }
            set {
                this.monatsBedarfFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string nachnamePatient {
            get {
                return this.nachnamePatientField;
            }
            set {
                this.nachnamePatientField = value;
            }
        }
        
        /// <remarks/>
        public int offeneAbgabemenge {
            get {
                return this.offeneAbgabemengeField;
            }
            set {
                this.offeneAbgabemengeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offeneAbgabemengeSpecified {
            get {
                return this.offeneAbgabemengeFieldSpecified;
            }
            set {
                this.offeneAbgabemengeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string pharmanummer {
            get {
                return this.pharmanummerField;
            }
            set {
                this.pharmanummerField = value;
            }
        }
        
        /// <remarks/>
        public string SVNRPatient {
            get {
                return this.sVNRPatientField;
            }
            set {
                this.sVNRPatientField = value;
            }
        }
        
        /// <remarks/>
        public string vornamePatient {
            get {
                return this.vornamePatientField;
            }
            set {
                this.vornamePatientField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class folgeverordnungsAusstellungsErgebnis {
        
        private int bewilligteAbgabemengeField;
        
        private bool bewilligteAbgabemengeFieldSpecified;
        
        private string druckNachnamePatientField;
        
        private string druckVornamePatientField;
        
        private string medikamentNameField;
        
        private string nachnamePatientField;
        
        private string pharmanummerField;
        
        private string referenzNrField;
        
        private bool rezeptGebBefreitField;
        
        private bool rezeptGebBefreitFieldSpecified;
        
        private string sVNRPatientField;
        
        private string sVTCodeField;
        
        private string vornamePatientField;
        
        /// <remarks/>
        public int bewilligteAbgabemenge {
            get {
                return this.bewilligteAbgabemengeField;
            }
            set {
                this.bewilligteAbgabemengeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bewilligteAbgabemengeSpecified {
            get {
                return this.bewilligteAbgabemengeFieldSpecified;
            }
            set {
                this.bewilligteAbgabemengeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string druckNachnamePatient {
            get {
                return this.druckNachnamePatientField;
            }
            set {
                this.druckNachnamePatientField = value;
            }
        }
        
        /// <remarks/>
        public string druckVornamePatient {
            get {
                return this.druckVornamePatientField;
            }
            set {
                this.druckVornamePatientField = value;
            }
        }
        
        /// <remarks/>
        public string medikamentName {
            get {
                return this.medikamentNameField;
            }
            set {
                this.medikamentNameField = value;
            }
        }
        
        /// <remarks/>
        public string nachnamePatient {
            get {
                return this.nachnamePatientField;
            }
            set {
                this.nachnamePatientField = value;
            }
        }
        
        /// <remarks/>
        public string pharmanummer {
            get {
                return this.pharmanummerField;
            }
            set {
                this.pharmanummerField = value;
            }
        }
        
        /// <remarks/>
        public string referenzNr {
            get {
                return this.referenzNrField;
            }
            set {
                this.referenzNrField = value;
            }
        }
        
        /// <remarks/>
        public bool rezeptGebBefreit {
            get {
                return this.rezeptGebBefreitField;
            }
            set {
                this.rezeptGebBefreitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rezeptGebBefreitSpecified {
            get {
                return this.rezeptGebBefreitFieldSpecified;
            }
            set {
                this.rezeptGebBefreitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string SVNRPatient {
            get {
                return this.sVNRPatientField;
            }
            set {
                this.sVNRPatientField = value;
            }
        }
        
        /// <remarks/>
        public string SVTCode {
            get {
                return this.sVTCodeField;
            }
            set {
                this.sVTCodeField = value;
            }
        }
        
        /// <remarks/>
        public string vornamePatient {
            get {
                return this.vornamePatientField;
            }
            set {
                this.vornamePatientField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class folgeverordnungsAusstellungsParameter {
        
        private string sVNRPatientField;
        
        private string sVTCodeField;
        
        private int beantragteAbgabemengeField;
        
        private bool beantragteAbgabemengeFieldSpecified;
        
        private string medikamentNameField;
        
        private string pharmanummerField;
        
        /// <remarks/>
        public string SVNRPatient {
            get {
                return this.sVNRPatientField;
            }
            set {
                this.sVNRPatientField = value;
            }
        }
        
        /// <remarks/>
        public string SVTCode {
            get {
                return this.sVTCodeField;
            }
            set {
                this.sVTCodeField = value;
            }
        }
        
        /// <remarks/>
        public int beantragteAbgabemenge {
            get {
                return this.beantragteAbgabemengeField;
            }
            set {
                this.beantragteAbgabemengeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool beantragteAbgabemengeSpecified {
            get {
                return this.beantragteAbgabemengeFieldSpecified;
            }
            set {
                this.beantragteAbgabemengeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string medikamentName {
            get {
                return this.medikamentNameField;
            }
            set {
                this.medikamentNameField = value;
            }
        }
        
        /// <remarks/>
        public string pharmanummer {
            get {
                return this.pharmanummerField;
            }
            set {
                this.pharmanummerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class anfrageAntwort {
        
        private bool bearbeitungNaechsterWerktagField;
        
        private bool bearbeitungNaechsterWerktagFieldSpecified;
        
        private string idField;
        
        private patientenDaten patientenDatenField;
        
        /// <remarks/>
        public bool bearbeitungNaechsterWerktag {
            get {
                return this.bearbeitungNaechsterWerktagField;
            }
            set {
                this.bearbeitungNaechsterWerktagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bearbeitungNaechsterWerktagSpecified {
            get {
                return this.bearbeitungNaechsterWerktagFieldSpecified;
            }
            set {
                this.bearbeitungNaechsterWerktagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public patientenDaten patientenDaten {
            get {
                return this.patientenDatenField;
            }
            set {
                this.patientenDatenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class patientenDaten {
        
        private string druckNachnameField;
        
        private string druckVornameField;
        
        private string eKVKNummerField;
        
        private string geschlechtField;
        
        private string nachnameField;
        
        private bool rezeptGebBefreitField;
        
        private bool rezeptGebBefreitFieldSpecified;
        
        private string sVNummerField;
        
        private string sVTCodeField;
        
        private string vornameField;
        
        /// <remarks/>
        public string druckNachname {
            get {
                return this.druckNachnameField;
            }
            set {
                this.druckNachnameField = value;
            }
        }
        
        /// <remarks/>
        public string druckVorname {
            get {
                return this.druckVornameField;
            }
            set {
                this.druckVornameField = value;
            }
        }
        
        /// <remarks/>
        public string EKVKNummer {
            get {
                return this.eKVKNummerField;
            }
            set {
                this.eKVKNummerField = value;
            }
        }
        
        /// <remarks/>
        public string geschlecht {
            get {
                return this.geschlechtField;
            }
            set {
                this.geschlechtField = value;
            }
        }
        
        /// <remarks/>
        public string nachname {
            get {
                return this.nachnameField;
            }
            set {
                this.nachnameField = value;
            }
        }
        
        /// <remarks/>
        public bool rezeptGebBefreit {
            get {
                return this.rezeptGebBefreitField;
            }
            set {
                this.rezeptGebBefreitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rezeptGebBefreitSpecified {
            get {
                return this.rezeptGebBefreitFieldSpecified;
            }
            set {
                this.rezeptGebBefreitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string SVNummer {
            get {
                return this.sVNummerField;
            }
            set {
                this.sVNummerField = value;
            }
        }
        
        /// <remarks/>
        public string SVTCode {
            get {
                return this.sVTCodeField;
            }
            set {
                this.sVTCodeField = value;
            }
        }
        
        /// <remarks/>
        public string vorname {
            get {
                return this.vornameField;
            }
            set {
                this.vornameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class statusBewilligungsAnfrage {
        
        private string abfrageZeitpunktField;
        
        private string anfrageIdField;
        
        private string beantwortungsZeitpunktField;
        
        private string eKVKNummerField;
        
        private string einlangeZeitpunktField;
        
        private string nachnamePatientField;
        
        private string sVNRPatientField;
        
        private string vornamePatientField;
        
        /// <remarks/>
        public string abfrageZeitpunkt {
            get {
                return this.abfrageZeitpunktField;
            }
            set {
                this.abfrageZeitpunktField = value;
            }
        }
        
        /// <remarks/>
        public string anfrageId {
            get {
                return this.anfrageIdField;
            }
            set {
                this.anfrageIdField = value;
            }
        }
        
        /// <remarks/>
        public string beantwortungsZeitpunkt {
            get {
                return this.beantwortungsZeitpunktField;
            }
            set {
                this.beantwortungsZeitpunktField = value;
            }
        }
        
        /// <remarks/>
        public string EKVKNummer {
            get {
                return this.eKVKNummerField;
            }
            set {
                this.eKVKNummerField = value;
            }
        }
        
        /// <remarks/>
        public string einlangeZeitpunkt {
            get {
                return this.einlangeZeitpunktField;
            }
            set {
                this.einlangeZeitpunktField = value;
            }
        }
        
        /// <remarks/>
        public string nachnamePatient {
            get {
                return this.nachnamePatientField;
            }
            set {
                this.nachnamePatientField = value;
            }
        }
        
        /// <remarks/>
        public string SVNRPatient {
            get {
                return this.sVNRPatientField;
            }
            set {
                this.sVNRPatientField = value;
            }
        }
        
        /// <remarks/>
        public string vornamePatient {
            get {
                return this.vornamePatientField;
            }
            set {
                this.vornamePatientField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class filterKriterien {
        
        private string anfrageStatusField;
        
        private string datumBisField;
        
        private string datumVonField;
        
        /// <remarks/>
        public string anfrageStatus {
            get {
                return this.anfrageStatusField;
            }
            set {
                this.anfrageStatusField = value;
            }
        }
        
        /// <remarks/>
        public string datumBis {
            get {
                return this.datumBisField;
            }
            set {
                this.datumBisField = value;
            }
        }
        
        /// <remarks/>
        public string datumVon {
            get {
                return this.datumVonField;
            }
            set {
                this.datumVonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(svtProperty))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.base.client.chipkarte.at")]
    public partial class baseProperty {
        
        private string codeField;
        
        private bool nurAnzeigeField;
        
        private bool nurAnzeigeFieldSpecified;
        
        private string textField;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public bool nurAnzeige {
            get {
                return this.nurAnzeigeField;
            }
            set {
                this.nurAnzeigeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nurAnzeigeSpecified {
            get {
                return this.nurAnzeigeFieldSpecified;
            }
            set {
                this.nurAnzeigeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.base.client.chipkarte.at")]
    public partial class svtProperty : baseProperty {
        
        private bool aSVGField;
        
        private bool aSVGFieldSpecified;
        
        private string eKVKCodeField;
        
        private string eKVKNameField;
        
        private string kurzbezeichnungField;
        
        /// <remarks/>
        public bool ASVG {
            get {
                return this.aSVGField;
            }
            set {
                this.aSVGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ASVGSpecified {
            get {
                return this.aSVGFieldSpecified;
            }
            set {
                this.aSVGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string EKVKCode {
            get {
                return this.eKVKCodeField;
            }
            set {
                this.eKVKCodeField = value;
            }
        }
        
        /// <remarks/>
        public string EKVKName {
            get {
                return this.eKVKNameField;
            }
            set {
                this.eKVKNameField = value;
            }
        }
        
        /// <remarks/>
        public string kurzbezeichnung {
            get {
                return this.kurzbezeichnungField;
            }
            set {
                this.kurzbezeichnungField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class langzeitVerordnung {
        
        private int beantragteMonateField;
        
        private bool beantragteMonateFieldSpecified;
        
        private int bewilligteMonateField;
        
        private bool bewilligteMonateFieldSpecified;
        
        private int bewilligtePackungenField;
        
        private bool bewilligtePackungenFieldSpecified;
        
        /// <remarks/>
        public int beantragteMonate {
            get {
                return this.beantragteMonateField;
            }
            set {
                this.beantragteMonateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool beantragteMonateSpecified {
            get {
                return this.beantragteMonateFieldSpecified;
            }
            set {
                this.beantragteMonateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int bewilligteMonate {
            get {
                return this.bewilligteMonateField;
            }
            set {
                this.bewilligteMonateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bewilligteMonateSpecified {
            get {
                return this.bewilligteMonateFieldSpecified;
            }
            set {
                this.bewilligteMonateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int bewilligtePackungen {
            get {
                return this.bewilligtePackungenField;
            }
            set {
                this.bewilligtePackungenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bewilligtePackungenSpecified {
            get {
                return this.bewilligtePackungenFieldSpecified;
            }
            set {
                this.bewilligtePackungenFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class anfrageEntscheid {
        
        private int beantragtePackungsanzahlField;
        
        private bool beantragtePackungsanzahlFieldSpecified;
        
        private medikament beantragtesMedikamentField;
        
        private int bewilligtePackungsanzahlField;
        
        private bool bewilligtePackungsanzahlFieldSpecified;
        
        private medikament bewilligtesMedikamentField;
        
        private string infoTextField;
        
        private langzeitVerordnung langzeitVerordnungField;
        
        private string magistraleZubereitungField;
        
        private string verordnungsEntscheidungField;
        
        /// <remarks/>
        public int beantragtePackungsanzahl {
            get {
                return this.beantragtePackungsanzahlField;
            }
            set {
                this.beantragtePackungsanzahlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool beantragtePackungsanzahlSpecified {
            get {
                return this.beantragtePackungsanzahlFieldSpecified;
            }
            set {
                this.beantragtePackungsanzahlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public medikament beantragtesMedikament {
            get {
                return this.beantragtesMedikamentField;
            }
            set {
                this.beantragtesMedikamentField = value;
            }
        }
        
        /// <remarks/>
        public int bewilligtePackungsanzahl {
            get {
                return this.bewilligtePackungsanzahlField;
            }
            set {
                this.bewilligtePackungsanzahlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bewilligtePackungsanzahlSpecified {
            get {
                return this.bewilligtePackungsanzahlFieldSpecified;
            }
            set {
                this.bewilligtePackungsanzahlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public medikament bewilligtesMedikament {
            get {
                return this.bewilligtesMedikamentField;
            }
            set {
                this.bewilligtesMedikamentField = value;
            }
        }
        
        /// <remarks/>
        public string infoText {
            get {
                return this.infoTextField;
            }
            set {
                this.infoTextField = value;
            }
        }
        
        /// <remarks/>
        public langzeitVerordnung langzeitVerordnung {
            get {
                return this.langzeitVerordnungField;
            }
            set {
                this.langzeitVerordnungField = value;
            }
        }
        
        /// <remarks/>
        public string magistraleZubereitung {
            get {
                return this.magistraleZubereitungField;
            }
            set {
                this.magistraleZubereitungField = value;
            }
        }
        
        /// <remarks/>
        public string verordnungsEntscheidung {
            get {
                return this.verordnungsEntscheidungField;
            }
            set {
                this.verordnungsEntscheidungField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class medikament {
        
        private string nameField;
        
        private string pharmanummerField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string pharmanummer {
            get {
                return this.pharmanummerField;
            }
            set {
                this.pharmanummerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class rueckantwort {
        
        private string abfrageZeitpunktField;
        
        private anfrageEntscheid[] anfrageEntscheideField;
        
        private string anfrageIdField;
        
        private string antragstypField;
        
        private string beantwortungsZeitpunktField;
        
        private bewilligungsAnfrage bewilligungsAnfrageField;
        
        private string eKVKPatientField;
        
        private string einlangeZeitpunktField;
        
        private string infoTextField;
        
        private string nachnamePatientField;
        
        private string referenzIdField;
        
        private string sVNRPatientField;
        
        private string vornamePatientField;
        
        /// <remarks/>
        public string abfrageZeitpunkt {
            get {
                return this.abfrageZeitpunktField;
            }
            set {
                this.abfrageZeitpunktField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("anfrageEntscheide", IsNullable=true)]
        public anfrageEntscheid[] anfrageEntscheide {
            get {
                return this.anfrageEntscheideField;
            }
            set {
                this.anfrageEntscheideField = value;
            }
        }
        
        /// <remarks/>
        public string anfrageId {
            get {
                return this.anfrageIdField;
            }
            set {
                this.anfrageIdField = value;
            }
        }
        
        /// <remarks/>
        public string antragstyp {
            get {
                return this.antragstypField;
            }
            set {
                this.antragstypField = value;
            }
        }
        
        /// <remarks/>
        public string beantwortungsZeitpunkt {
            get {
                return this.beantwortungsZeitpunktField;
            }
            set {
                this.beantwortungsZeitpunktField = value;
            }
        }
        
        /// <remarks/>
        public bewilligungsAnfrage bewilligungsAnfrage {
            get {
                return this.bewilligungsAnfrageField;
            }
            set {
                this.bewilligungsAnfrageField = value;
            }
        }
        
        /// <remarks/>
        public string EKVKPatient {
            get {
                return this.eKVKPatientField;
            }
            set {
                this.eKVKPatientField = value;
            }
        }
        
        /// <remarks/>
        public string einlangeZeitpunkt {
            get {
                return this.einlangeZeitpunktField;
            }
            set {
                this.einlangeZeitpunktField = value;
            }
        }
        
        /// <remarks/>
        public string infoText {
            get {
                return this.infoTextField;
            }
            set {
                this.infoTextField = value;
            }
        }
        
        /// <remarks/>
        public string nachnamePatient {
            get {
                return this.nachnamePatientField;
            }
            set {
                this.nachnamePatientField = value;
            }
        }
        
        /// <remarks/>
        public string referenzId {
            get {
                return this.referenzIdField;
            }
            set {
                this.referenzIdField = value;
            }
        }
        
        /// <remarks/>
        public string SVNRPatient {
            get {
                return this.sVNRPatientField;
            }
            set {
                this.sVNRPatientField = value;
            }
        }
        
        /// <remarks/>
        public string vornamePatient {
            get {
                return this.vornamePatientField;
            }
            set {
                this.vornamePatientField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class bewilligungsAnfrage {
        
        private string antragstypField;
        
        private patientenDaten patientenDatenField;
        
        private string verordnerinformationField;
        
        private verordnung[] verordnungenField;
        
        /// <remarks/>
        public string antragstyp {
            get {
                return this.antragstypField;
            }
            set {
                this.antragstypField = value;
            }
        }
        
        /// <remarks/>
        public patientenDaten patientenDaten {
            get {
                return this.patientenDatenField;
            }
            set {
                this.patientenDatenField = value;
            }
        }
        
        /// <remarks/>
        public string verordnerinformation {
            get {
                return this.verordnerinformationField;
            }
            set {
                this.verordnerinformationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("verordnungen", IsNullable=true)]
        public verordnung[] verordnungen {
            get {
                return this.verordnungenField;
            }
            set {
                this.verordnungenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.abs.client.chipkarte.at")]
    public partial class verordnung {
        
        private string begruendungField;
        
        private string diagnoseField;
        
        private string dosierungField;
        
        private string langzeitverordnungField;
        
        private string magistraleZubereitungField;
        
        private medikament medikamentField;
        
        private int packungsanzahlField;
        
        private bool packungsanzahlFieldSpecified;
        
        /// <remarks/>
        public string begruendung {
            get {
                return this.begruendungField;
            }
            set {
                this.begruendungField = value;
            }
        }
        
        /// <remarks/>
        public string diagnose {
            get {
                return this.diagnoseField;
            }
            set {
                this.diagnoseField = value;
            }
        }
        
        /// <remarks/>
        public string dosierung {
            get {
                return this.dosierungField;
            }
            set {
                this.dosierungField = value;
            }
        }
        
        /// <remarks/>
        public string langzeitverordnung {
            get {
                return this.langzeitverordnungField;
            }
            set {
                this.langzeitverordnungField = value;
            }
        }
        
        /// <remarks/>
        public string magistraleZubereitung {
            get {
                return this.magistraleZubereitungField;
            }
            set {
                this.magistraleZubereitungField = value;
            }
        }
        
        /// <remarks/>
        public medikament medikament {
            get {
                return this.medikamentField;
            }
            set {
                this.medikamentField = value;
            }
        }
        
        /// <remarks/>
        public int packungsanzahl {
            get {
                return this.packungsanzahlField;
            }
            set {
                this.packungsanzahlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool packungsanzahlSpecified {
            get {
                return this.packungsanzahlFieldSpecified;
            }
            set {
                this.packungsanzahlFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.base.client.chipkarte.at")]
    public partial class property {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void abfragenLangzeitbewilligungCompletedEventHandler(object sender, abfragenLangzeitbewilligungCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class abfragenLangzeitbewilligungCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal abfragenLangzeitbewilligungCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public langzeitbewilligungsAbfrageErgebnis[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((langzeitbewilligungsAbfrageErgebnis[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void checkStatusCompletedEventHandler(object sender, checkStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public property[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((property[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ermittelnPatientenDatenCompletedEventHandler(object sender, ermittelnPatientenDatenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ermittelnPatientenDatenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ermittelnPatientenDatenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bewilligungsAnfrage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bewilligungsAnfrage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getRueckantwortCompletedEventHandler(object sender, getRueckantwortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRueckantwortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRueckantwortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rueckantwort Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rueckantwort)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getSVTsCompletedEventHandler(object sender, getSVTsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSVTsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSVTsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public svtProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((svtProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getStatusBewilligungsAnfragenCompletedEventHandler(object sender, getStatusBewilligungsAnfragenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusBewilligungsAnfragenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusBewilligungsAnfragenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public statusBewilligungsAnfrage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((statusBewilligungsAnfrage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getStatusPatientBewilligungsAnfragenCompletedEventHandler(object sender, getStatusPatientBewilligungsAnfragenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusPatientBewilligungsAnfragenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusPatientBewilligungsAnfragenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public statusBewilligungsAnfrage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((statusBewilligungsAnfrage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void sendenAnfrageCompletedEventHandler(object sender, sendenAnfrageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendenAnfrageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendenAnfrageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public anfrageAntwort Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((anfrageAntwort)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void sendenFolgeverordnungCompletedEventHandler(object sender, sendenFolgeverordnungCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendenFolgeverordnungCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendenFolgeverordnungCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public folgeverordnungsAusstellungsErgebnis Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((folgeverordnungsAusstellungsErgebnis)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591